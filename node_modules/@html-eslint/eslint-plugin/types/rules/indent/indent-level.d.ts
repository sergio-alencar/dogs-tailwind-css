export = IndentLevel;
/**
 * @typedef {import("../../types").AnyNode} AnyNode
 * @typedef {{ [key in AnyNode['type']]?: number}} IncLevelOptions
 * @typedef {(node: AnyNode) => number} GetIncreasingLevel
 */
declare class IndentLevel {
    /**
     * @param {Object} config
     * @param {GetIncreasingLevel} config.getIncreasingLevel
     */
    constructor(config: {
        getIncreasingLevel: GetIncreasingLevel;
    });
    /**
     * @member
     * @private
     * @type {number}
     */
    private level;
    /**
     * @member
     * @private
     * @type {number}
     */
    private baseLevel;
    /**
     * @member
     * @private
     */
    private getInc;
    /**
     * @returns {number}
     */
    value(): number;
    /**
     * @param {AnyNode} node
     */
    indent(node: AnyNode): void;
    /**
     * @param {AnyNode} node
     */
    dedent(node: AnyNode): void;
    /**
     * @param {number} base
     */
    setBase(base: number): void;
}
declare namespace IndentLevel {
    export { AnyNode, IncLevelOptions, GetIncreasingLevel };
}
type AnyNode = import("../../types").AnyNode;
type IncLevelOptions = { [key in AnyNode["type"]]?: number; };
type GetIncreasingLevel = (node: AnyNode) => number;
//# sourceMappingURL=indent-level.d.ts.map