import { is_tag_node, get_classes, has_attribute, get_attribute } from "@linthtml/dom-utils";
import { types } from "node:util";
const { isRegExp } = types;
const RULE_NAME = "class-no-dup";
function filterClasses(classes, options) {
    let ignore = options["id-class-ignore-regex"];
    // TODO: Remove after `raw-ignore-text` refacto
    classes = classes.filter((_) => /^Â¤+$/.test(_) === false);
    if (ignore) {
        ignore = isRegExp(ignore) ? ignore : new RegExp(ignore);
        classes = classes.filter((_class) => !ignore.test(_class));
    }
    return classes;
}
function lint(node, _config, { report, global_config }) {
    if (is_tag_node(node) && has_attribute(node, "class")) {
        const class_attribute = get_attribute(node, "class");
        let classes = filterClasses(get_classes(class_attribute), global_config);
        classes = classes.sort();
        for (let i = 0; i < classes.length - 1; i++) {
            if (classes[i + 1] === classes[i]) {
                report({
                    code: "E041",
                    position: class_attribute.value.loc,
                    meta: {
                        data: { classes: classes[i] }
                    }
                });
            }
        }
    }
}
export default {
    name: RULE_NAME,
    lint
};
